<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Logging on daschl writes. sometimes.</title>
    <link>https://nitschinger.at/tags/logging/</link>
    <description>Recent content in Logging on daschl writes. sometimes.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 16 May 2013 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://nitschinger.at/tags/logging/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Logging with the Couchbase Java Client</title>
      <link>https://nitschinger.at/Logging-with-the-Couchbase-Java-Client/</link>
      <pubDate>Thu, 16 May 2013 00:00:00 +0000</pubDate>
      
      <guid>https://nitschinger.at/Logging-with-the-Couchbase-Java-Client/</guid>
      <description>Introduction There is a huge variety in logging frameworks for Java, and its hard to please everyone. To understand how logging is currently handled in the SDK, we have to go back a few years. As you may know, the SDK depends on the spymemcached library and therefore also inherits its logging mechanisms. Back in the days when @dustin wrote spy, there was no good abstraction for logging available (like SLF4J), so he wrote his own.</description>
    </item>
    
  </channel>
</rss>