<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>View on daschl writes. sometimes.</title>
    <link>http://nitschinger.at/tags/view/</link>
    <description>Recent content in View on daschl writes. sometimes.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 20 Nov 2010 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://nitschinger.at/tags/view/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Add an RSS-Feed to your blog with Lithium</title>
      <link>http://nitschinger.at/Add-an-RSS-Feed-to-your-blog-with-Lithium/</link>
      <pubDate>Sat, 20 Nov 2010 00:00:00 +0000</pubDate>
      
      <guid>http://nitschinger.at/Add-an-RSS-Feed-to-your-blog-with-Lithium/</guid>
      <description>&lt;p&gt;Adding an RSS-Feed to your blog with li3 is really straightforward, because all the infrastructure you need is already at your fingertips. I assume that you already have some posts stored in your database, you serve them to your users via &lt;code&gt;/posts&lt;/code&gt; and the new RSS-File should be accessible via &lt;code&gt;/posts.rss&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;First, we need to tell Lithium that we want to add another Media-Type to our application. Add the following to your &lt;code&gt;app/config/bootstrap/media.php&lt;/code&gt;-File (and don&amp;rsquo;t forget to uncomment it in &lt;code&gt;app/config/bootstrap.php&lt;/code&gt;). You can also comment the other code out in this file if you don&amp;rsquo;t need it.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;use lithium\net\http\Media;
Media::type(&#39;rss&#39;, &#39;application/rss+xml&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next, let&amp;rsquo;s add a link to our &lt;code&gt;default.html.php&lt;/code&gt;-Layout so that our feed shows up in the browser.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?= $this-&amp;gt;html-&amp;gt;link(&#39;RSS-Feed&#39;, &#39;/posts.rss&#39;, array(&#39;type&#39; =&amp;gt; &#39;rss&#39;)); ?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Before we start to create our RSS-Views, check that your &lt;code&gt;PostsController::index()&lt;/code&gt;-Method looks something like this and returns one or more posts to the View.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public function index() {
    $posts = Post::all(array(&#39;order&#39; =&amp;gt; array(&#39;created&#39; =&amp;gt; &#39;DESC&#39;)));
    return compact(&#39;posts&#39;);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Alright, first create a new &lt;code&gt;default.rss.php&lt;/code&gt;-Layout (in &lt;code&gt;app/views/layouts&lt;/code&gt;):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?php echo &#39;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; ?&amp;gt;&#39;; ?&amp;gt;
    &amp;lt;rss version=&amp;quot;2.0&amp;quot;&amp;gt;
        &amp;lt;channel&amp;gt;
            &amp;lt;title&amp;gt;My cool Blog&amp;lt;/title&amp;gt;
            &amp;lt;description&amp;gt;A short description about my blog.&amp;lt;/description&amp;gt;
            &amp;lt;link&amp;gt;http://exampleblog.com/&amp;lt;/link&amp;gt;
            &amp;lt;lastBuildDate&amp;gt;&amp;lt;?= date(&#39;D, d M Y g:i:s O&#39;); ?&amp;gt;&amp;lt;/lastBuildDate&amp;gt;
            &amp;lt;pubDate&amp;gt;&amp;lt;?= date(&#39;D, d M Y g:i:s O&#39;); ?&amp;gt;&amp;lt;/pubDate&amp;gt;
            &amp;lt;?= $this-&amp;gt;content(); ?&amp;gt;
        &amp;lt;/channel&amp;gt;
    &amp;lt;/rss&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The previous code is just basic RSS-Markup. Feel free to add a custom title, description, link and so on. The &lt;code&gt;lastBuildDate&lt;/code&gt; and &lt;code&gt;pubDate&lt;/code&gt; are generated dynamically. &lt;code&gt;&amp;lt;?= $this-&amp;gt;content(); ?&amp;gt;&lt;/code&gt; will render our &lt;code&gt;posts&lt;/code&gt;-View which we&amp;rsquo;ll add now. Insert the following code in &lt;code&gt;app/views/posts/index.rss.php&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    &amp;lt;?php foreach($posts As $post): ?&amp;gt;
    &amp;lt;item&amp;gt;
        &amp;lt;title&amp;gt;&amp;lt;?= $post-&amp;gt;title; ?&amp;gt;&amp;lt;/title&amp;gt;
        &amp;lt;description&amp;gt;&amp;lt;?= $post-&amp;gt;teaser; ?&amp;gt;&amp;lt;/description&amp;gt;
        &amp;lt;link&amp;gt;&amp;lt;?= $this-&amp;gt;html-&amp;gt;link($post-&amp;gt;title, array(&#39;Posts::show&#39;, &#39;slug&#39; =&amp;gt; $post-&amp;gt;slug)); ?&amp;gt;&amp;lt;/link&amp;gt;
        &amp;lt;guid isPermaLink=&amp;quot;true&amp;quot;&amp;gt;http://exampleblog.com/&amp;lt;?= $post-&amp;gt;slug ?&amp;gt;&amp;lt;/guid&amp;gt;
        &amp;lt;pubDate&amp;gt;&amp;lt;?= date(&#39;D, d M Y g:i:s O&#39;, $post-&amp;gt;created-&amp;gt;sec); ?&amp;gt;&amp;lt;/pubDate&amp;gt;
    &amp;lt;/item&amp;gt;
    &amp;lt;?php endforeach; ?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You may need to modify the attributes according to your database schema. If you need help on this, feel free to contact me or ask in #li3 on FreeNode.&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s it! You&amp;rsquo;ve added an RSS-Feed to your blog. You can now click the RSS-Icon in your browser or render it directly with &lt;code&gt;http://exampleblog.com/posts.rss&lt;/code&gt;. BTW: that&amp;rsquo;s exactly how I did it for this blog, so I hope that it should work for you too!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>