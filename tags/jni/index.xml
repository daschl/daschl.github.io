<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jni on daschl writes. sometimes.</title>
    <link>https://nitschinger.at/tags/jni/</link>
    <description>Recent content in jni on daschl writes. sometimes.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 19 Feb 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://nitschinger.at/tags/jni/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>First Steps with Rust and JNI</title>
      <link>https://nitschinger.at/First-Steps-with-Rust-and-JNI/</link>
      <pubDate>Fri, 19 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://nitschinger.at/First-Steps-with-Rust-and-JNI/</guid>
      <description>The first steps are always the hardest, at least thats how the saying goes. But it turns out that calling into Rust from Java is easier than I originally thought.
The following blog post shows you how to setup and compile a Rust library which can be called from Java userland. Note that everything you see in this post, while being functional, is very simplistic. Real world JNI has lots of nitty gritty details and pitfalls, but we need to start somewhere right?</description>
    </item>
    
  </channel>
</rss>