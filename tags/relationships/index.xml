<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Relationships on daschl writes. sometimes.</title>
    <link>https://nitschinger.at/tags/relationships/</link>
    <description>Recent content in Relationships on daschl writes. sometimes.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 03 Mar 2012 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://nitschinger.at/tags/relationships/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Introducing Relationships in Lithium</title>
      <link>https://nitschinger.at/Introducing-Relationships-in-Lithium/</link>
      <pubDate>Sat, 03 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>https://nitschinger.at/Introducing-Relationships-in-Lithium/</guid>
      <description>Introduction The model relationship support in Lithium is one of the hottest topics on IRC lately, so I thought it would be a good idea to blog about it.
Currently, Lithium supports 1:1 and 1:n relationships for relational databases. There is no m:n support out of the box (like CakePHP&amp;rsquo;s $hasAndBelongsToMany). This also means that MongoDB relationships are not implemented for now. If you look at the Roadmap, you can see that this is on the &amp;ldquo;pre 1.</description>
    </item>
    
  </channel>
</rss>