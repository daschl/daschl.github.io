<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>embedded on daschl writes. sometimes.</title>
    <link>https://nitschinger.at/tags/embedded/</link>
    <description>Recent content in embedded on daschl writes. sometimes.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 01 Oct 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://nitschinger.at/tags/embedded/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Getting Started with the nRF52840 in Rust</title>
      <link>https://nitschinger.at/Getting-Started-with-the-nRF52840-in-Rust/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://nitschinger.at/Getting-Started-with-the-nRF52840-in-Rust/</guid>
      <description>After my last blog post on the TSIC 306 temperature sensor port to Rust, someone on Reddit mentioned that it does not provide any guidance on how to get the code samples actually running on the chip.
So this post takes a step back and runs you through the basics of setting up a project, configuring it properly and finally running different examples.
Before we dive in I want to mention that I&amp;rsquo;m still quite new to the embedded world, so some of the information might not be accurate or misleading.</description>
    </item>
    
    <item>
      <title>Rusty-PID: Porting the TSic sensor from C to Rust</title>
      <link>https://nitschinger.at/Rusty-PID-Porting-the-TSic-sensor-from-C-to-Rust/</link>
      <pubDate>Mon, 28 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://nitschinger.at/Rusty-PID-Porting-the-TSic-sensor-from-C-to-Rust/</guid>
      <description>This post is part of my &amp;ldquo;Rusty-PID&amp;rdquo; series, in which you can follow my adventure building a PID Controller for my Rancilio Silvia in Rust.
In this blog post we&amp;rsquo;ll dive into how to read temperature measurements from the TSic sensor in Rust. It goes pretty deep into the implementation details and the porting process, so if you just want to use it go straight to the tsic-rs repository and don&amp;rsquo;t look back.</description>
    </item>
    
  </channel>
</rss>