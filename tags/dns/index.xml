<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dns on daschl writes. sometimes.</title>
    <link>http://nitschinger.at/tags/dns/</link>
    <description>Recent content in Dns on daschl writes. sometimes.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 29 Jan 2014 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://nitschinger.at/tags/dns/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Bootstrapping from DNS SRV records in Java</title>
      <link>http://nitschinger.at/Bootstrapping-from-DNS-SRV-records-in-Java/</link>
      <pubDate>Wed, 29 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://nitschinger.at/Bootstrapping-from-DNS-SRV-records-in-Java/</guid>
      <description>&lt;p&gt;I know this topic has a very narrow audience, but I hope that one or two people out there scratching their heads will benefit from it.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s the itch we&amp;rsquo;re trying to scratch: is there an easy way to determine hostnames for - let&amp;rsquo;s say - a database connection? There are many ways to do this, like hardcoding it, providing them through a properties file and so on. All this techniques (maybe aside from fetching it over the network from a central storage) require some modifications on the server once one of the hostnames changes. If you need to maintain a lot of machines, this can get inefficient pretty quickly.&lt;/p&gt;

&lt;p&gt;Now let&amp;rsquo;s step back a second and think about what we&amp;rsquo;re using anyway in our infrastructure: DNS. Until recently I haven&amp;rsquo;t heard of the SRV record that you can use to &amp;ldquo;refer&amp;rdquo; to other hostnames. The nice thing about this is that you can provide more endpoints and even add weights and and priorities. Let&amp;rsquo;s look at an example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;_cbnodes._tcp.example.com.  0  IN  SRV  20  0  8091  node2.example.com.
_cbnodes._tcp.example.com.  0  IN  SRV  10  0  8091  node1.example.com.
_cbnodes._tcp.example.com.  0  IN  SRV  30  0  8091  node3.example.com.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here, based on the &amp;ldquo;_cbnodes._tcp.example.com.&amp;rdquo; service information we get to know that there are three nodes configured that belong to this service. They all listen on port &lt;code&gt;8091&lt;/code&gt;, but have priorities associated with them (10, 20, 30). Lower priorities are considered more important, so you can use that to your advantage. The &lt;code&gt;0&lt;/code&gt; between the priority and the port is the weight. You can use different weights (which are probabilities) to generate some kind of load-balancing behaviour.&lt;/p&gt;

&lt;p&gt;Once this is configured on the DNS server, we can make use of that in our application. Say we want to infer the seed nodes to bootstrap from in our &lt;code&gt;CouchbaseClient&lt;/code&gt;. To make this happen, we need to make use of &lt;a href=&#34;http://en.wikipedia.org/wiki/Java_Naming_and_Directory_Interface&#34;&gt;JNDI&lt;/a&gt;. Let&amp;rsquo;s first create a simple class that will hold those records shown above:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #ffffff&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #A90D91&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color: #A90D91&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #3F6E75&#34;&gt;DnsRecord&lt;/span&gt; &lt;span style=&#34;color: #A90D91&#34;&gt;implements&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;Comparable&amp;lt;DnsRecord&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #A90D91&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color: #A90D91&#34;&gt;final&lt;/span&gt; &lt;span style=&#34;color: #A90D91&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;priority;&lt;/span&gt;
    &lt;span style=&#34;color: #A90D91&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color: #A90D91&#34;&gt;final&lt;/span&gt; &lt;span style=&#34;color: #A90D91&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;weight;&lt;/span&gt;
    &lt;span style=&#34;color: #A90D91&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color: #A90D91&#34;&gt;final&lt;/span&gt; &lt;span style=&#34;color: #A90D91&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;port;&lt;/span&gt;
    &lt;span style=&#34;color: #A90D91&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color: #A90D91&#34;&gt;final&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;host;&lt;/span&gt;

    &lt;span style=&#34;color: #A90D91&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;DnsRecord(&lt;/span&gt;&lt;span style=&#34;color: #A90D91&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;priority,&lt;/span&gt; &lt;span style=&#34;color: #A90D91&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;weight,&lt;/span&gt; &lt;span style=&#34;color: #A90D91&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;port,&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;host)&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color: #A90D91&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #836C28&#34;&gt;priority&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;priority;&lt;/span&gt;
      &lt;span style=&#34;color: #A90D91&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #836C28&#34;&gt;weight&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;weight;&lt;/span&gt;
      &lt;span style=&#34;color: #A90D91&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #836C28&#34;&gt;port&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;port;&lt;/span&gt;
      &lt;span style=&#34;color: #A90D91&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #836C28&#34;&gt;host&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;host.&lt;/span&gt;&lt;span style=&#34;color: #836C28&#34;&gt;replaceAll&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #C41A16&#34;&gt;&amp;quot;\\\\.$&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #C41A16&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color: #000000&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color: #A90D91&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #A90D91&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;getPriority()&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color: #A90D91&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;priority;&lt;/span&gt;
    &lt;span style=&#34;color: #000000&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color: #A90D91&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #A90D91&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;getWeight()&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color: #A90D91&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;weight;&lt;/span&gt;
    &lt;span style=&#34;color: #000000&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color: #A90D91&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #A90D91&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;getPort()&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color: #A90D91&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;port;&lt;/span&gt;
    &lt;span style=&#34;color: #000000&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color: #A90D91&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;getHost()&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color: #A90D91&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;host;&lt;/span&gt;
    &lt;span style=&#34;color: #000000&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color: #A90D91&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #A90D91&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;DnsRecord&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;fromString(String&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;input)&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color: #000000&#34;&gt;String[]&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;splitted&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;input.&lt;/span&gt;&lt;span style=&#34;color: #836C28&#34;&gt;split&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #C41A16&#34;&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;);&lt;/span&gt;
      &lt;span style=&#34;color: #A90D91&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #A90D91&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;DnsRecord(&lt;/span&gt;
        &lt;span style=&#34;color: #000000&#34;&gt;Integer.&lt;/span&gt;&lt;span style=&#34;color: #836C28&#34;&gt;parseInt&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;(splitted[&lt;/span&gt;&lt;span style=&#34;color: #1C01CE&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;]),&lt;/span&gt;
        &lt;span style=&#34;color: #000000&#34;&gt;Integer.&lt;/span&gt;&lt;span style=&#34;color: #836C28&#34;&gt;parseInt&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;(splitted[&lt;/span&gt;&lt;span style=&#34;color: #1C01CE&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;]),&lt;/span&gt;
        &lt;span style=&#34;color: #000000&#34;&gt;Integer.&lt;/span&gt;&lt;span style=&#34;color: #836C28&#34;&gt;parseInt&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;(splitted[&lt;/span&gt;&lt;span style=&#34;color: #1C01CE&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;]),&lt;/span&gt;
        &lt;span style=&#34;color: #000000&#34;&gt;splitted[&lt;/span&gt;&lt;span style=&#34;color: #1C01CE&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;]&lt;/span&gt;
      &lt;span style=&#34;color: #000000&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color: #000000&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color: #000000&#34;&gt;@Override&lt;/span&gt;
    &lt;span style=&#34;color: #A90D91&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;toString()&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color: #A90D91&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #C41A16&#34;&gt;&amp;quot;DnsRecord{&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;+&lt;/span&gt;
        &lt;span style=&#34;color: #C41A16&#34;&gt;&amp;quot;priority=&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;priority&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;+&lt;/span&gt;
        &lt;span style=&#34;color: #C41A16&#34;&gt;&amp;quot;, weight=&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;weight&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;+&lt;/span&gt;
        &lt;span style=&#34;color: #C41A16&#34;&gt;&amp;quot;, port=&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;port&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;+&lt;/span&gt;
        &lt;span style=&#34;color: #C41A16&#34;&gt;&amp;quot;, host=&amp;#39;&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;host&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #2300CE&#34;&gt;&amp;#39;\\&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;+&lt;/span&gt;
        &lt;span style=&#34;color: #2300CE&#34;&gt;&amp;#39;}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color: #000000&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color: #000000&#34;&gt;@Override&lt;/span&gt;
    &lt;span style=&#34;color: #A90D91&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #A90D91&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;compareTo(DnsRecord&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;o)&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color: #A90D91&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;(getPriority()&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;o.&lt;/span&gt;&lt;span style=&#34;color: #836C28&#34;&gt;getPriority&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #A90D91&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #1C01CE&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;;&lt;/span&gt;
      &lt;span style=&#34;color: #000000&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: #A90D91&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #A90D91&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #1C01CE&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;;&lt;/span&gt;
      &lt;span style=&#34;color: #000000&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color: #000000&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color: #000000&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We provide a custom &lt;code&gt;compareTo&lt;/code&gt; method in order to automatically sort each &lt;code&gt;DnsRecord&lt;/code&gt; by priority. The next step is to write a method that allows us to fetch the actual information:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #ffffff&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;service&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #C41A16&#34;&gt;&amp;quot;_cbnodes._tcp.example.com&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color: #000000&#34;&gt;Hashtable&amp;lt;String,&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;String&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;env&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #A90D91&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;Hashtable&amp;lt;String,&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;String&amp;gt;();&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;env.&lt;/span&gt;&lt;span style=&#34;color: #836C28&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #C41A16&#34;&gt;&amp;quot;java.naming.factory.initial&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #C41A16&#34;&gt;&amp;quot;com.sun.jndi.dns.DnsContextFactory&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;);&lt;/span&gt;
  &lt;span style=&#34;color: #000000&#34;&gt;env.&lt;/span&gt;&lt;span style=&#34;color: #836C28&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #C41A16&#34;&gt;&amp;quot;java.naming.provider.url&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #C41A16&#34;&gt;&amp;quot;dns:&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;DirContext&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;ctx&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #A90D91&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;InitialDirContext(env);&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;Attributes&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;attrs&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;ctx.&lt;/span&gt;&lt;span style=&#34;color: #836C28&#34;&gt;getAttributes&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;(service,&lt;/span&gt; &lt;span style=&#34;color: #A90D91&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;String[]&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #C41A16&#34;&gt;&amp;quot;SRV&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;});&lt;/span&gt;

  &lt;span style=&#34;color: #000000&#34;&gt;NamingEnumeration&amp;lt;?&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;servers&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;attrs.&lt;/span&gt;&lt;span style=&#34;color: #836C28&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #C41A16&#34;&gt;&amp;quot;srv&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color: #836C28&#34;&gt;getAll&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;();&lt;/span&gt;
  &lt;span style=&#34;color: #000000&#34;&gt;Set&amp;lt;DnsRecord&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;sortedRecords&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #A90D91&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;TreeSet&amp;lt;DnsRecord&amp;gt;();&lt;/span&gt;
  &lt;span style=&#34;color: #A90D91&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;(servers.&lt;/span&gt;&lt;span style=&#34;color: #836C28&#34;&gt;hasMore&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #000000&#34;&gt;DnsRecord&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;record&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;DnsRecord.&lt;/span&gt;&lt;span style=&#34;color: #836C28&#34;&gt;fromString&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;((String)&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;servers.&lt;/span&gt;&lt;span style=&#34;color: #836C28&#34;&gt;next&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;());&lt;/span&gt;
    &lt;span style=&#34;color: #000000&#34;&gt;sortedRecords.&lt;/span&gt;&lt;span style=&#34;color: #836C28&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;(record);&lt;/span&gt;
  &lt;span style=&#34;color: #000000&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now we have a &lt;code&gt;Set&lt;/code&gt; of sorted &lt;code&gt;DnsRecords&lt;/code&gt;, which we can use however we want to. For example, with &lt;a href=&#34;http://couchbase.com&#34;&gt;Couchbase&lt;/a&gt; we can turn them into &lt;code&gt;URI&lt;/code&gt;s:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #ffffff&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;List&amp;lt;URI&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;uris&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #A90D91&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;ArrayList&amp;lt;URI&amp;gt;();&lt;/span&gt;
&lt;span style=&#34;color: #A90D91&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;(DnsRecord&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;record&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;sortedRecords)&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;{&lt;/span&gt;
	&lt;span style=&#34;color: #000000&#34;&gt;uris.&lt;/span&gt;&lt;span style=&#34;color: #836C28&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #A90D91&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;URI(&lt;/span&gt;&lt;span style=&#34;color: #C41A16&#34;&gt;&amp;quot;http://&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;record.&lt;/span&gt;&lt;span style=&#34;color: #836C28&#34;&gt;getHost&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #C41A16&#34;&gt;&amp;quot;:&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;record.&lt;/span&gt;&lt;span style=&#34;color: #836C28&#34;&gt;getPort&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #C41A16&#34;&gt;&amp;quot;/pools&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;));&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you want to play around with the code and don&amp;rsquo;t have DNS SRV records set up, I recommend you to use &lt;code&gt;_xmpp-server._tcp.gmail.com&lt;/code&gt;. It exposes Googles GMail XMPP servers and lets
you try the code without much effort. In case you wonder how to mock that thing correctly, I recommend you to mock the &lt;code&gt;DirContext&lt;/code&gt; like so:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #ffffff&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;service&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #C41A16&#34;&gt;&amp;quot;_seeds._tcp.couchbase.com&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color: #000000&#34;&gt;BasicAttributes&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;basicAttributes&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #A90D91&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;BasicAttributes(&lt;/span&gt;&lt;span style=&#34;color: #A90D91&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;BasicAttribute&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;basicAttribute&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #A90D91&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;BasicAttribute(&lt;/span&gt;&lt;span style=&#34;color: #C41A16&#34;&gt;&amp;quot;SRV&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;basicAttribute.&lt;/span&gt;&lt;span style=&#34;color: #836C28&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #C41A16&#34;&gt;&amp;quot;20 0 8091 node2.couchbase.com.&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;basicAttribute.&lt;/span&gt;&lt;span style=&#34;color: #836C28&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #C41A16&#34;&gt;&amp;quot;10 0 8091 node1.couchbase.com.&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;basicAttribute.&lt;/span&gt;&lt;span style=&#34;color: #836C28&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #C41A16&#34;&gt;&amp;quot;30 0 8091 node3.couchbase.com.&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;basicAttribute.&lt;/span&gt;&lt;span style=&#34;color: #836C28&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #C41A16&#34;&gt;&amp;quot;40 0 8091 node4.couchbase.com.&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;basicAttributes.&lt;/span&gt;&lt;span style=&#34;color: #836C28&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;(basicAttribute);&lt;/span&gt;

&lt;span style=&#34;color: #000000&#34;&gt;DirContext&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;mockedContext&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;mock(DirContext.&lt;/span&gt;&lt;span style=&#34;color: #836C28&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color: #000000&#34;&gt;when(mockedContext.&lt;/span&gt;&lt;span style=&#34;color: #836C28&#34;&gt;getAttributes&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;(service,&lt;/span&gt; &lt;span style=&#34;color: #A90D91&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;String[]&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #C41A16&#34;&gt;&amp;quot;SRV&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #000000&#34;&gt;}))&lt;/span&gt;
  &lt;span style=&#34;color: #000000&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #836C28&#34;&gt;thenReturn&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;(basicAttributes);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The code shown here (and more advanced features) are part of the official Couchbase SDK, so check out the &lt;a href=&#34;https://github.com/couchbase/couchbase-java-client&#34;&gt;codebase&lt;/a&gt; if you want to learn more!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>